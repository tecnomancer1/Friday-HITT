AWSTemplateFormatVersion: "2010-09-09"
Description: FridayHITT Network Stack

Parameters:
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
    ConstraintDescription: Must be a valid EC2 instance type.

  DBInstanceType:
    Description: RDS instance type
    Type: String
    Default: db.t2.micro
    AllowedValues:
      - db.t2.micro
      - db.t2.small
    ConstraintDescription: Must be a valid RDS instance type.

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: FridayHITT

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: FridayHITT

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: "10.0.0.0/24"
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: FridayHITT

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: "10.0.1.0/24"
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: FridayHITT

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: "10.0.2.0/24"
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: FridayHITT

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: "10.0.3.0/24"
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: FridayHITT

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the web server
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
      Tags:
        - Key: Name
          Value: FridayHITT

  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the database server
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - CidrIp: "10.0.0.0/16"  # Allow traffic from the VPC
          IpProtocol: tcp
          FromPort: 3306  # MySQL port
          ToPort: 3306
      Tags:
        - Key: Name
          Value: FridayHITT

  WebServer1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        Ref: InstanceType
      SecurityGroups:
        - !Ref WebSecurityGroup
      SubnetId:
        Ref: PublicSubnet1
      KeyName: key-pair-name
      ImageId: ami-id
      Tags:
        - Key: Name
          Value: FridayHITT
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Install and configure web server here
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "<html><h1>Hello, FridayHITT!</h1></html>" > /var/www/html/index.html

  WebServer2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        Ref: InstanceType
      SecurityGroups:
        - !Ref WebSecurityGroup
      SubnetId:
        Ref: PublicSubnet2
      KeyName: key-pair-name
      ImageId: ami-id
      Tags:
        - Key: Name
          Value: FridayHITT
      UserData:
        Fn::Base64: !Sub |
          #!/bash/bin
          # Install and configure web server here
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "<html><h1>Hello, FridayHITT!</h1></html>" > /var/www/html/index.html

  DatabaseServer:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20  # Modify as needed
      DBInstanceClass:
        Ref: DBInstanceType
      Engine: mysql
      EngineVersion: "5.7"
      MasterUsername: db-username
      MasterUserPassword: db-password
      DBSubnetGroupName:
        Fn::Sub: FridayHITTDBSubnetGroup
      VPCSecurityGroups:
        - !Ref DatabaseSecurityGroup
      Tags:
        - Key: Name
          Value: FridayHITT

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: FridayHITT

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: FridayHITT

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId:
        Ref: InternetGateway
      Tags:
        - Key: Name
          Value: FridayHITT

  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      DestinationCidrBlock: "10.0.0.0/16"  # Route traffic to the VPC
      Tags:
        - Key: Name
          Value: FridayHITT


  PrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: nat-gateway-id  # Replace with Nat Gateway ID
      Tags:
        - Key: Name
          Value: FridayHITT

Outputs:
  WebServer1PublicIP:
    Description: Public IP address of WebServer1
    Value: !GetAtt WebServer1.PublicIp

  WebServer2PublicIP:
    Description: Public IP address of WebServer2
    Value: !GetAtt WebServer2.PublicIp

