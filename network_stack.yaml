AWSTemplateFormatVersion: "2010-09-09"
Description: FridayHITT Network Stack

Parameters:
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
    ConstraintDescription: Must be a valid EC2 instance type.

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: FridayHITTVPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: "10.0.0.0/24"
      AvailabilityZone: !Select [0, !GetAZs '']

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: "10.0.1.0/24"
      AvailabilityZone: !Select [1, !GetAZs '']

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: "10.0.2.0/24"
      AvailabilityZone: !Select [0, !GetAZs '']

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: "10.0.3.0/24"
      AvailabilityZone: !Select [1, !GetAZs '']

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the web server
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80

  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the database server
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - CidrIp: "10.0.0.0/16"  # Allow traffic from the VPC
          IpProtocol: tcp
          FromPort: 3306  # MySQL used
          ToPort: 3306

  WebServer:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        Ref: InstanceType
      SecurityGroups:
        - !Ref WebSecurityGroup
      SubnetId:
        Ref: PublicSubnet1
      KeyName: key-pair-name
      ImageId: ami-id
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Install and configure web server here

  DatabaseServer:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        Ref: InstanceType
      SecurityGroups:
        - !Ref DatabaseSecurityGroup
      SubnetId:
        Ref: PrivateSubnet1
      KeyName: key-pair-name
      ImageId: database-ami-id
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Install and configure database software here

Outputs:
  WebServerPublicIP:
    Description: Public IP address of the web server
    Value: !GetAtt WebServer.PublicIp

  DatabaseServerPrivateIP:
    Description: Private IP address of the database server
    Value: !GetAtt DatabaseServer.PrivateIp
