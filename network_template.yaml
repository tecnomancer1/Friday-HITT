AWSTemplateFormatVersion: 2010-09-09
Description: FridayHITT Network Stack

Parameters:
  SecurityGroupPorts:
    Type: List<Number>
    Description: 'Port numbers as a list: <web-server-port>,<database-port>'
    Default: '80,3306,22,-1'

Resources:

  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-FridayHITT-VPC'

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-FridayHITT-InternetGateway'

  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

  # Subnets ---
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: eu-west-1a
      MapPublicIpOnLaunch: true  # Ensure a public IP is assigned to the jumpbox
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-FridayHITT-PublicSubnet1'

  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: eu-west-1b
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-FridayHITT-PublicSubnet2'

  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: eu-west-1a
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-FridayHITT-PrivateSubnet1'

  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: eu-west-1b
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-FridayHITT-PrivateSubnet2'

  # Security groups ---
  JumpboxSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for the jumpbox server'
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - CidrIp: 10.0.0.0/16
          IpProtocol: tcp
          FromPort: !Select [2, !Ref SecurityGroupPorts] # Allows SSH
          ToPort: !Select [2, !Ref SecurityGroupPorts] # Allows SSH
        - CidrIp: 10.0.0.0/16
          IpProtocol: icmp
          FromPort: !Select [ 3, !Ref SecurityGroupPorts ] # Allows all ICMP types and codes
          ToPort: !Select [ 3, !Ref SecurityGroupPorts ] # Allows all ICMP types and codes
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-FridayHITT-JumpboxSecurityGroup'

  WebSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for the web server'
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: !Select [0, !Ref SecurityGroupPorts]
          ToPort: !Select [0, !Ref SecurityGroupPorts]
        - CidrIp: 10.0.0.0/16
          IpProtocol: icmp
          FromPort: !Select [ 3, !Ref SecurityGroupPorts ] # Allows all ICMP types and codes
          ToPort: !Select [ 3, !Ref SecurityGroupPorts ] # Allows all ICMP types and codes
        - CidrIp: 10.0.0.0/16
          IpProtocol: tcp
          FromPort: !Select [ 2, !Ref SecurityGroupPorts ] # Allows SSH
          ToPort: !Select [ 2, !Ref SecurityGroupPorts ] # Allows SSH
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-FridayHITT-WebSecurityGroup'

  DatabaseSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for the database server'
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - CidrIp: 10.0.0.0/16
          IpProtocol: tcp
          FromPort: !Select [1, !Ref SecurityGroupPorts]
          ToPort: !Select [1, !Ref SecurityGroupPorts]
        - CidrIp: 10.0.0.0/16
          IpProtocol: icmp
          FromPort: !Select [ 3, !Ref SecurityGroupPorts ] # Allows all ICMP types and codes
          ToPort: !Select [ 3, !Ref SecurityGroupPorts ] # Allows all ICMP types and codes
        - CidrIp: 10.0.0.0/16
          IpProtocol: tcp
          FromPort: !Select [ 2, !Ref SecurityGroupPorts ] # Allows SSH
          ToPort: !Select [ 2, !Ref SecurityGroupPorts ] # Allows SSH
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-FridayHITT-DatabaseSecurityGroup'


  # Route tables ---
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-FridayHITT-PublicRouteTable'

  PublicRouteTableAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicRouteTableAssociation2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

Outputs:
  VpcId:
    Value: !Ref Vpc

  PublicSubnet1:
    Description: 'Public subnet1'
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub '${AWS::StackName}-FridayHITT-PublicSubnet1'

  PublicSubnet2:
    Description: 'Public subnet2'
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub '${AWS::StackName}-FridayHITT-PublicSubnet2'

  PrivateSubnet1:
    Description: 'Private subnet1'
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub '${AWS::StackName}-FridayHITT-PrivateSubnet1'

  PrivateSubnet2:
    Description: 'Private subnet2'
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub '${AWS::StackName}-FridayHITT-PrivateSubnet2'

  JumpboxSecurityGroup:
    Description: 'Jumpbox security group'
    Value: !Ref JumpboxSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-FridayHITT-JumpboxSecurityGroup'

  DbSecurityGroup:
    Description: 'Database servers security group'
    Value: !Ref DbSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-FridayHITT-DbSecurityGroup'

  WebSecurityGroup:
    Description: 'Webservers security group'
    Value: !Ref WebSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-FridayHITT-WebSecurityGroup'

